//
//  StatementPresenter.swift
//  Assignment
//
//  Created by Digvijay Joshi on 23/10/19.
//  Copyright (c) 2019 Digvijay Joshi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementPresentationLogic
{
	func presentUserAccount(response: Statement.GetUserAccount.Response)
  func presentStatement(response: [Statement.FetchStatement.Response])
	func presentError(error: Error)
}

class StatementPresenter: StatementPresentationLogic
{
  weak var viewController: StatementDisplayLogic?
	
	
	func presentUserAccount(response: Statement.GetUserAccount.Response)
	{
		let userAccount = response.userAccount
		let viewModel = Statement.GetUserAccount.ViewModel(displayedUser: userAccount)
		viewController?.displayUserAccountDetail(viewModel: viewModel)
	}
	
  func presentStatement(response: [Statement.FetchStatement.Response])
  {
		var displayedTransactions: [Statement.FetchStatement.ViewModel.Transaction] = []
		for transactionObject in response {
			let transaction = Statement.FetchStatement.ViewModel.Transaction(title: transactionObject.title, desc: transactionObject.desc, date: transactionObject.date, value: transactionObject.value)
			displayedTransactions.append(transaction)
		}
		let viewModel = Statement.FetchStatement.ViewModel(displayedTransactions: displayedTransactions)
		viewController?.displayFetchedStatement(viewModel: viewModel)
  }
	
	func presentError(error: Error)
	{
		Utility.displayAlert(title: "Error", message: error.localizedDescription)
	}
	
}
