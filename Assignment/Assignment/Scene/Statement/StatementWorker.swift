//
//  StatementWorker.swift
//  Assignment
//
//  Created by Digvijay Joshi on 23/10/19.
//  Copyright (c) 2019 Digvijay Joshi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class StatementWorker
{
	
	fileprivate struct Constants {
		static let kErrorDictionaryKey = "error"
		static let kStatementDictionaryKey = "statementList"
	}
	
	func fetchStatement(completion: @escaping ([Statement.FetchStatement.Response]?, Error?) -> ())
	{
		guard let publicUrl = URL(string: "https://bank-app-test.herokuapp.com/api/statements/1") else { return }
		URLSession.shared.dataTask(with: publicUrl) { (data, response
			, error) in
			guard let data = data else { return }
			do {
				let errorDictionary: NSDictionary?
				let statementDictionary: NSArray?
				if let json = data.jsonDictionary() {
					errorDictionary = json[Constants.kErrorDictionaryKey] as? NSDictionary
					statementDictionary = json[Constants.kStatementDictionaryKey] as? NSArray
					
					if errorDictionary!.count > 0{
						completion(nil, error)
						return
					} else if (statementDictionary!.count > 0) {
						let decoder = JSONDecoder()
						let dataFromDict = try JSONSerialization.data(withJSONObject: statementDictionary as Any, options: JSONSerialization.WritingOptions.prettyPrinted)
						let publicData = try decoder.decode([Statement.FetchStatement.Response].self, from: dataFromDict)
						completion(publicData, nil)
						return
					}
				}
				completion(nil,nil)
			} catch let err {
				completion(nil,err)
			}
			}.resume()
	}
	
}
